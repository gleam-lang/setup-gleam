#!/usr/bin/env bash

fail() {
  echo $1 > /dev/stderr
  exit 1
}

# Code taken from https://github.com/vic/asdf-gleam

set -e
set -o pipefail

version=$1

install_gleam() {
  local install_type=$1
  local version=$2
  local install_path=$3

  if [ "$install_type" = "version" ] && ! (has_binary_release $version) ; then
    echo "ERROR: Gleam version $version has no binary release."
    echo "Try installing from source. You will need a working rust compiler."
    exit 1
  fi

  local tmp_dir=$(mktemp -d -t gleam_build_XXXXXX)

  (
    if test "$install_type" = "version"; then
      local release_file="$tmp_dir/gleam-$install_type-$version.tar.gz"
      local release_url=$(get_download_url $version)
      download_file "$release_file" "$release_url"
      mkdir -p $install_path/bin
      tar -xf "$release_file" -C $install_path/bin
    else
      # install from source
      git clone --depth 1 --branch "$version" "https://github.com/lpil/gleam" "$tmp_dir/src"
      cargo install --path "$tmp_dir/src/gleam" --root "$install_path"
    fi
  ) || rm -rf $install_path/*

  rm -rf $tmp_dir
}

has_binary_release() {
  local version=$1
  version_gt "$version" "0.1"
}

# from https://stackoverflow.com/questions/16989598/bash-comparing-version-numbers/24067243
version_gt() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }


get_variant() {
  local version="$1"
  case "$(uname -s)" in
    Linux)
      case "$(uname -m)" in
        x86_64) echo linux-amd64 ;;
        *) fail "$(uname -m) is not supported on linux" ;;
      esac ;;
    Darwin)
      case "$(uname -m)" in
        x86_64) echo macos ;;
        *) fail "$(uname -m) is not supported on macos" ;;
      esac ;;
    *) fail "$(uname -s) is not supported" ;;
  esac
}


download_file() {
  local download_path="$1"
  local download_url="$2"
  if test "302" != $(curl -qsI -o /dev/null -w "%{http_code}" "$download_url"); then
    echo "Could not find archive at URL $download_url"
    exit 2
  fi
  curl -Lo "$download_path" "$download_url"
}


get_download_url() {
  local version=$1
  local variant=$(get_variant $version)
  echo "https://github.com/gleam-lang/gleam/releases/download/v${version}/gleam-v${version}-${variant}.tar.gz"
}

# Non asdf code here

workdir=$(mktemp -d)
install_gleam version $version $workdir

output=$workdir/bin/gleam
if test -f $output; then
  sudo cp -v $output /usr/local/bin/gleam
else
  echo Failed to instal Gleam $version
  exit 1
fi
